name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v**'
  pull_request:
    branches:
      - '*'

env:
  MAVEN_USERNAME: mahdirezazadeh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Build with Maven
        run: mvn clean compile

  deploy-snapshot-package:
    needs: [build]
    name: deploy snapshot package
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.project.outputs.version }}
        run: |
          echo $RELEASE_VERSION

      - name: Build with Maven
        if: endsWith(steps.project.outputs.version, 'SNAPSHOT') == true
        run: mvn clean package
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Deploy to GitHub Packages
        if: endsWith(steps.project.outputs.version, 'SNAPSHOT') == true
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}

  deploy-snapshot-update-site:
    name: deploy snapshot update site
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Extract Maven project version
        run: echo version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) >> $GITHUB_OUTPUT
        id: project

      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.project.outputs.version }}
        run: |
          echo $RELEASE_VERSION

      - name: Verify with Maven
        if: endsWith(steps.project.outputs.version, 'SNAPSHOT') == true
        run: mvn clean verify
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Archive files
        if: endsWith(steps.project.outputs.version, 'SNAPSHOT') == true
        run:
          cp ./org.flickit.dsl.editor.v2.repository/category.xml ./org.flickit.dsl.editor.v2.repository/target/repository/ &&
          cd ./org.flickit.dsl.editor.v2.repository/target/repository/ &&
          zip -r update-${{ steps.project.outputs.version }}.zip features plugins artifacts.jar content.jar category.xml &&
          cp update-${{ steps.project.outputs.version }}.zip ../../../

      - name: Upload Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: update-${{ steps.project.outputs.version }}.zip
          token: ${{ secrets.GH_PACKAGES_TOKEN }}
          tag: ${{ steps.project.outputs.version }}


  build-deploy-package:
    needs: [build]
    name: deploy package
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Build with Maven
        run: mvn clean package
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Deploy to GitHub Packages
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}
